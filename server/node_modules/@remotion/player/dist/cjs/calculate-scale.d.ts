import type { VideoConfig } from 'remotion';
import type { PreviewSize } from './utils/preview-size.js';
import type { Size } from './utils/use-element-size.js';
export declare const calculateScale: ({ canvasSize, compositionHeight, compositionWidth, previewSize, }: {
    previewSize: PreviewSize['size'];
    compositionWidth: number;
    compositionHeight: number;
    canvasSize: Size;
}) => number;
declare type Layout = {
    centerX: number;
    centerY: number;
    xCorrection: number;
    yCorrection: number;
    scale: number;
};
export declare const calculateCanvasTransformation: ({ previewSize, compositionWidth, compositionHeight, canvasSize, }: {
    previewSize: PreviewSize['size'];
    compositionWidth: number;
    compositionHeight: number;
    canvasSize: Size;
}) => Layout;
export declare const calculateOuterStyle: ({ config, style, canvasSize, }: {
    config: VideoConfig | null;
    style: React.CSSProperties | undefined;
    canvasSize: Size | null;
}) => React.CSSProperties;
export declare const calculateContainerStyle: ({ config, canvasSize, layout, scale, }: {
    config: VideoConfig | null;
    canvasSize: Size | null;
    layout: Layout | null;
    scale: number;
}) => React.CSSProperties;
export declare const calculateOuter: ({ layout, scale, config, }: {
    layout: Layout | null;
    scale: number;
    config: VideoConfig | null;
}) => React.CSSProperties;
export {};
