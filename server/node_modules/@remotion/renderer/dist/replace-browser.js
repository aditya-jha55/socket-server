"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleBrowserCrash = void 0;
const handleBrowserCrash = (instance) => {
    let _instance = instance;
    const waiters = [];
    let replacing = false;
    return {
        getBrowser: () => _instance,
        replaceBrowser: async (make, makeNewPages) => {
            if (replacing) {
                const waiter = new Promise((resolve, reject) => {
                    waiters.push({
                        resolve,
                        reject,
                    });
                });
                return waiter;
            }
            try {
                replacing = true;
                await _instance
                    .close(true)
                    .then(() => {
                    console.log('Killed previous browser and making new one');
                })
                    .catch(() => {
                    // Ignore as browser crashed
                });
                const browser = await make();
                _instance = browser;
                await makeNewPages();
                waiters.forEach((w) => w.resolve(browser));
                console.log('Made new browser');
                return browser;
            }
            catch (err) {
                waiters.forEach((w) => w.reject(err));
                throw err;
            }
            finally {
                replacing = false;
            }
        },
    };
};
exports.handleBrowserCrash = handleBrowserCrash;
