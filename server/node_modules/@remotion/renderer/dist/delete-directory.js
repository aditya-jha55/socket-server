"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteDirectory = void 0;
const execa_1 = __importDefault(require("execa"));
const fs_1 = __importStar(require("fs"));
const is_serve_url_1 = require("./is-serve-url");
const deleteDirectory = (directory) => {
    var _a;
    if ((0, is_serve_url_1.isServeUrl)(directory)) {
        return;
    }
    if (!(0, fs_1.existsSync)(directory)) {
        return;
    }
    if (process.platform === 'win32') {
        // We use del before to remove all files inside the directories otherwise
        // rmdir will throw an error.
        execa_1.default.sync('cmd', ['/c', 'del', '/f', '/s', '/q', directory]);
        try {
            execa_1.default.sync('cmd', ['/c', 'rmdir', '/s', '/q', directory]);
        }
        catch (err) {
            // Is not a directory
        }
    }
    else {
        ((_a = fs_1.default.rmSync) !== null && _a !== void 0 ? _a : fs_1.default.rmdirSync)(directory, {
            recursive: true,
        });
    }
};
exports.deleteDirectory = deleteDirectory;
