import type { RequestListener } from 'http';
import type { OffthreadVideoImageFormat } from 'remotion';
import type { RenderMediaOnDownload } from './assets/download-and-map-assets-to-file';
import type { DownloadMap } from './assets/download-map';
import type { FfmpegExecutable } from './ffmpeg-executable';
export declare const extractUrlAndSourceFromUrl: (url: string) => {
    src: string;
    time: number;
    imageFormat: OffthreadVideoImageFormat;
};
export declare const startOffthreadVideoServer: ({ ffmpegExecutable, ffprobeExecutable, onDownload, onError, downloadMap, remotionRoot, }: {
    ffmpegExecutable: FfmpegExecutable;
    ffprobeExecutable: FfmpegExecutable;
    onDownload: RenderMediaOnDownload;
    onError: (err: Error) => void;
    downloadMap: DownloadMap;
    remotionRoot: string;
}) => RequestListener;
