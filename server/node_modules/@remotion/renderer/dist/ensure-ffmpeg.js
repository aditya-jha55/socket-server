"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureFfprobe = exports.ensureFfmpeg = void 0;
const fs_1 = require("fs");
const os_1 = __importDefault(require("os"));
const ffmpeg_flags_1 = require("./ffmpeg-flags");
const validate_ffmpeg_1 = require("./validate-ffmpeg");
const ensureFfmpegOrFfprobe = async (binary, options) => {
    var _a;
    const exists = (0, validate_ffmpeg_1.binaryExists)(binary);
    const remotionRoot = (_a = options === null || options === void 0 ? void 0 : options.remotionRoot) !== null && _a !== void 0 ? _a : process.cwd();
    if (exists) {
        return {
            wasAlreadyInstalled: true,
            result: 'found-in-path',
        };
    }
    if (process.platform === 'linux' && (0, fs_1.existsSync)(ffmpeg_flags_1.lambdaFfmpegPaths[binary])) {
        return {
            wasAlreadyInstalled: true,
            result: 'found-in-path',
        };
    }
    if ((0, ffmpeg_flags_1.ffmpegInNodeModules)(remotionRoot, binary)) {
        return {
            result: 'found-in-node-modules',
            wasAlreadyInstalled: true,
        };
    }
    const binaryUrl = (0, ffmpeg_flags_1.getBinaryDownloadUrl)(binary);
    if (binaryUrl) {
        await (0, ffmpeg_flags_1.downloadBinary)(remotionRoot, binaryUrl.url, binary);
        return {
            result: 'installed',
            wasAlreadyInstalled: false,
        };
    }
    throw new Error(`${binary} could not be installed automatically. Your architecture and OS combination (os = ${os_1.default.platform()}, arch = ${process.arch}) is not supported. Please install ${binary} manually and add "${binary}" to your PATH.`);
};
/**
 * @description Checks if the ffmpeg binary is installed and if it is not, downloads it and puts it into your node_modules folder.
 * @see [Documentation](https://www.remotion.dev/docs/renderer/ensure-ffmpeg)
 */
const ensureFfmpeg = (options) => {
    return ensureFfmpegOrFfprobe('ffmpeg', options);
};
exports.ensureFfmpeg = ensureFfmpeg;
/**
 * @description Checks if the ffprobe binary is installed and if it is not, downloads it and puts it into your node_modules folder.
 * @see [Documentation](https://www.remotion.dev/docs/renderer/ensure-ffprobe)
 */
const ensureFfprobe = (options) => {
    return ensureFfmpegOrFfprobe('ffprobe', options);
};
exports.ensureFfprobe = ensureFfprobe;
