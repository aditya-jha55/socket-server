"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkNodeVersionAndWarnAboutRosetta = void 0;
const os = __importStar(require("os"));
const checkNodeVersionAndWarnAboutRosetta = () => {
    // see https://github.com/nodejs/node/issues/41900#issuecomment-1113511254
    const cpus = os.cpus();
    const isAppleSilicon = cpus[0].model.includes('Apple');
    const isArm64 = os.arch() === 'arm64';
    const version = process.version.replace('v', '').split('.');
    const majorVersion = Number(version[0]);
    const requiredNodeVersion = 14;
    if (majorVersion < 13) {
        throw new Error(`Remotion requires at least Node ${requiredNodeVersion}. You currently have ${process.version}. Update your node version to ${requiredNodeVersion} to use Remotion.`);
    }
    if (isAppleSilicon && !isArm64) {
        const recommendedNodeVersion = 16;
        const recommendNodeUpgrade = majorVersion < recommendedNodeVersion;
        console.warn([
            `⚠️  Apple Silicon detected but Node.JS running under Rosetta. This will cause performance issues.\n`,
            `Recommended actions:\n`,
            recommendNodeUpgrade
                ? ` - Upgrade to Node ${recommendedNodeVersion} or later\n`
                : ' - Run Node using `arch -arm64` architecture\n',
            'See https://remotion.dev/docs/troubleshooting/rosetta for more information.',
            '---',
        ]
            .filter(Boolean)
            .join('\n'));
    }
};
exports.checkNodeVersionAndWarnAboutRosetta = checkNodeVersionAndWarnAboutRosetta;
