import type { Browser, BrowserExecutable, CancelSignal, ChromiumOptions, LogLevel, StillImageFormat } from '@remotion/renderer';
import type { JobProgressCallback } from '../preview-server/render-queue/job';
export declare const renderStillFlow: ({ remotionRoot, fullEntryPoint, entryPointReason, remainingArgs, browser, browserExecutable, chromiumOptions, envVariables, height, inputProps, overwrite, port, publicDir, puppeteerTimeout, quality, scale, stillFrame, width, compositionIdFromUi, imageFormatFromUi, logLevel, onProgress, indentOutput, addCleanupCallback, cancelSignal, }: {
    remotionRoot: string;
    fullEntryPoint: string;
    entryPointReason: string;
    remainingArgs: string[];
    inputProps: object;
    envVariables: Record<string, string>;
    quality: number | undefined;
    browser: Browser;
    stillFrame: number;
    browserExecutable: BrowserExecutable;
    chromiumOptions: ChromiumOptions;
    scale: number;
    overwrite: boolean;
    puppeteerTimeout: number;
    port: number | null;
    publicDir: string | null;
    height: number | null;
    width: number | null;
    compositionIdFromUi: string | null;
    imageFormatFromUi: StillImageFormat | null;
    logLevel: LogLevel;
    onProgress: JobProgressCallback;
    indentOutput: boolean;
    addCleanupCallback: (cb: () => void) => void;
    cancelSignal: CancelSignal | null;
}) => Promise<void>;
