import type { Codec, StitchingState } from '@remotion/renderer';
import type { BundlingState, CopyingState } from './progress-bar';
import type { RenderStep } from './step';
export declare type DownloadProgress = {
    name: string;
    id: number;
    progress: number | null;
    totalBytes: number | null;
    downloaded: number;
};
export declare type RenderingProgressInput = {
    frames: number;
    totalFrames: number;
    steps: RenderStep[];
    concurrency: number;
    doneIn: number | null;
};
export declare type StitchingProgressInput = {
    frames: number;
    totalFrames: number;
    doneIn: number | null;
    stage: StitchingState;
    codec: Codec;
};
export declare type AggregateRenderProgress = {
    rendering: RenderingProgressInput | null;
    stitching: StitchingProgressInput | null;
    downloads: DownloadProgress[];
    bundling: BundlingState;
    copyingState: CopyingState;
};
export declare const initialAggregateRenderProgress: () => AggregateRenderProgress;
