"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptionExplainer = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const layout_1 = require("../layout");
const MenuDivider_1 = require("../Menu/MenuDivider");
const CliCopyButton_1 = require("./CliCopyButton");
const container = {
    fontSize: 14,
    paddingTop: 10,
    paddingBottom: 10,
};
const padding = {
    paddingLeft: 12,
    paddingRight: 12,
};
const title = {
    fontSize: 14,
};
const description = {
    fontSize: 14,
    maxWidth: 400,
};
const link = {
    fontSize: 14,
    maxWidth: 200,
    color: '#0b84f3',
    wordWrap: 'break-word',
};
const infoRow = {
    ...padding,
    fontSize: 14,
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
};
const infoRowLabel = {
    width: 150,
    fontSize: 14,
    color: 'white',
};
const OptionExplainer = ({ option }) => {
    return ((0, jsx_runtime_1.jsxs)("div", { style: container, className: "__remotion-info-button-container", children: [(0, jsx_runtime_1.jsxs)("div", { style: padding, children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("strong", { style: title, children: option.name }) }), (0, jsx_runtime_1.jsx)("div", { style: description, children: option.description })] }), (0, jsx_runtime_1.jsx)(layout_1.Spacing, { y: 0.5, block: true }), (0, jsx_runtime_1.jsx)(MenuDivider_1.MenuDivider, {}), (0, jsx_runtime_1.jsx)(layout_1.Spacing, { y: 0.5, block: true }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("div", { style: infoRow, children: [(0, jsx_runtime_1.jsx)("div", { style: infoRowLabel, children: "CLI flag:" }), (0, jsx_runtime_1.jsx)("code", { children: option.cliFlag }), (0, jsx_runtime_1.jsx)("div", { style: { display: 'flex', justifyContent: 'flex-end', flex: 1 }, children: (0, jsx_runtime_1.jsx)(CliCopyButton_1.CliCopyButton, { valueToCopy: option.cliFlag }) })] }), (0, jsx_runtime_1.jsxs)("div", { style: infoRow, children: [(0, jsx_runtime_1.jsx)("div", { style: infoRowLabel, children: "Node.JS option:" }), (0, jsx_runtime_1.jsx)("code", { children: option.ssrName })] }), (0, jsx_runtime_1.jsx)("div", { style: infoRow, children: (0, jsx_runtime_1.jsx)("a", { style: link, href: option.docLink, target: "_blank", children: "Docs" }) })] })] }));
};
exports.OptionExplainer = OptionExplainer;
