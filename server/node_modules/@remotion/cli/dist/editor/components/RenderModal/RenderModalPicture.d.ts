import type { PixelFormat, StillImageFormat, VideoImageFormat } from '@remotion/renderer';
import React from 'react';
import type { SegmentedControlItem } from '../SegmentedControl';
import type { RenderType } from './RenderModalAdvanced';
declare const qualityControlModes: readonly ["crf", "bitrate"];
export declare type QualityControl = typeof qualityControlModes[number];
export declare const RenderModalPicture: React.FC<{
    renderMode: RenderType;
    scale: number;
    setScale: React.Dispatch<React.SetStateAction<number>>;
    pixelFormat: PixelFormat;
    setPixelFormat: React.Dispatch<React.SetStateAction<PixelFormat>>;
    imageFormatOptions: SegmentedControlItem[];
    setQualityControl: React.Dispatch<React.SetStateAction<QualityControl>>;
    qualityControlType: QualityControl;
    videoImageFormat: VideoImageFormat;
    stillImageFormat: StillImageFormat;
    setQuality: React.Dispatch<React.SetStateAction<number>>;
    quality: number;
    maxCrf: number;
    minCrf: number;
    setCrf: React.Dispatch<React.SetStateAction<number>>;
    shouldDisplayCrfOption: boolean;
    setCustomTargetVideoBitrateValue: React.Dispatch<React.SetStateAction<string>>;
    crf: number;
    customTargetVideoBitrate: string;
}>;
export {};
