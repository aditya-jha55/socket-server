"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setOutputFormat = exports.getOutputCodecOrUndefined = exports.setCodec = void 0;
const renderer_1 = require("@remotion/renderer");
const log_1 = require("../log");
const validLegacyFormats = ['mp4', 'png-sequence'];
let codec;
const setCodec = (newCodec) => {
    if (newCodec === undefined) {
        codec = undefined;
        return;
    }
    if (!renderer_1.RenderInternals.validCodecs.includes(newCodec)) {
        throw new Error(`Codec must be one of the following: ${renderer_1.RenderInternals.validCodecs.join(', ')}, but got ${newCodec}`);
    }
    codec = newCodec;
};
exports.setCodec = setCodec;
const getOutputCodecOrUndefined = () => {
    return codec;
};
exports.getOutputCodecOrUndefined = getOutputCodecOrUndefined;
const setOutputFormat = (newLegacyFormat) => {
    if (newLegacyFormat === undefined) {
        codec = undefined;
        return;
    }
    if (!validLegacyFormats.includes(newLegacyFormat)) {
        throw new Error(`Output format must be one of the following: ${validLegacyFormats.join(', ')}, but got ${newLegacyFormat}`);
    }
    log_1.Log.warn('setOutputFormat() is deprecated. Use the setCodec() and setImageSequence() instead.');
    if (newLegacyFormat === 'mp4') {
        codec = 'h264';
        return;
    }
    if (newLegacyFormat === 'png-sequence') {
        codec = undefined;
    }
};
exports.setOutputFormat = setOutputFormat;
