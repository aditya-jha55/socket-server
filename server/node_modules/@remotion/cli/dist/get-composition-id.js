"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCompositionId = void 0;
const log_1 = require("./log");
const select_composition_1 = require("./select-composition");
const getCompositionId = async (validCompositions, args) => {
    const [compName, ...remainingArgs] = args;
    if (compName) {
        const config = validCompositions.find((c) => c.id === compName);
        if (!config) {
            throw new Error(`Cannot find composition with ID "${compName}". Available composition: ${validCompositions
                .map((c) => c.id)
                .join(', ')}`);
        }
        return {
            compositionId: compName,
            reason: 'Passed as argument',
            config,
            argsAfterComposition: remainingArgs,
        };
    }
    if (!process.env.CI) {
        const { compositionId, reason } = await (0, select_composition_1.selectComposition)(validCompositions);
        if (compositionId && typeof compositionId === 'string') {
            return {
                compositionId,
                reason,
                config: validCompositions.find((c) => c.id === compositionId),
                argsAfterComposition: args,
            };
        }
    }
    log_1.Log.error('Composition ID not passed.');
    log_1.Log.error('Pass an extra argument <composition-id>.');
    process.exit(1);
};
exports.getCompositionId = getCompositionId;
