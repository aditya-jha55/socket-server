import type { WebpackOverrideFn } from 'remotion';
import webpack from 'webpack';
export declare type LegacyBundleOptions = {
    webpackOverride?: WebpackOverrideFn;
    outDir?: string;
    enableCaching?: boolean;
    publicPath?: string;
    rootDir?: string;
    publicDir?: string | null;
    onPublicDirCopyProgress?: (bytes: number) => void;
    onSymlinkDetected?: (path: string) => void;
};
export declare const getConfig: ({ entryPoint, outDir, resolvedRemotionRoot, onProgress, options, }: {
    outDir: string;
    entryPoint: string;
    resolvedRemotionRoot: string;
    onProgress?: ((progress: number) => void) | undefined;
    options?: LegacyBundleOptions | undefined;
}) => [string, webpack.Configuration];
export declare type BundleOptions = {
    entryPoint: string;
    onProgress?: (progress: number) => void;
    ignoreRegisterRootWarning?: boolean;
} & LegacyBundleOptions;
declare type Arguments = [options: BundleOptions] | [
    entryPoint: string,
    onProgress?: (progress: number) => void,
    options?: LegacyBundleOptions
];
/**
 * @description The method bundles a Remotion project using Webpack and prepares it for rendering using renderMedia()
 * @see [Documentation](https://www.remotion.dev/docs/bundle)
 */
export declare function bundle(...args: Arguments): Promise<string>;
export {};
